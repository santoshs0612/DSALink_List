A number N is represented in Linked List such that each digit corresponds to a node in linked list. You need to add 1 to it.

Example 1:

Input:
LinkedList: 4->5->6
Output: 457 
Example 2:

Input:
LinkedList: 1->2->3
Output: 124 










/* 

struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};

*/

class Solution
{
    public:
    Node* reverse_list(Node* head)
    {
        Node* prev=NULL;
        Node* curr=head;
        Node* nxtpt=NULL;
        
        while(curr!=NULL)
        {
            nxtpt=curr->next;
            curr->next= prev;
            prev= curr;
            curr=nxtpt;
        }
        return prev;
    }
    Node* addOne(Node *head) 
    {
        // Your Code here
        // return head of list after adding one
        
        Node* new_node=reverse_list(head);
        
        Node* temp=new_node;
        while(temp!=NULL)
        {
            int sum= temp->data+1;
            if(sum>9)
            {
                temp->data=0;
                if(temp->next==NULL)
                {
                    Node* dummy= new Node(1);
                    temp->next=dummy;
                    temp=temp->next->next;
                }
                else 
                {
                    temp=temp->next;
                }
                

            }
            else if(sum<=9)
            {
                temp->data=sum;
                break;
            }
        }
        Node* res_node= reverse_list(new_node);
        return res_node;
    }
};
