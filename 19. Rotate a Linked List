Given a singly linked list of size N. The task is to left-shift the linked list by k nodes, where k is a given positive integer smaller than or equal to length of the linked list.

Example 1:

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7
Example 2:

Input:
N = 8
value[] = {1, 2, 3, 4, 5, 6, 7, 8}
k = 4
Output: 5 6 7 8 1 2 3 4


/*

struct Node {
    int data;
    struct Node *next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/


class Solution
{
    public:
    //Function to rotate a linked list.
    Node* rotate(Node* head, int k)
    {
        // Your code here
        
        Node* head1=head;
        Node* head2=head;
        Node* prev= NULL;
        int i =0;
        while(i<k && head1!=NULL)
        {
            i++;
            prev=head1;
            head1=head1->next;
        }
        if(head1==NULL)
        {
            return head;
        }
        head2=head1;
        prev->next=NULL;
        while(head2->next!=NULL)
        {
            head2=head2->next;
        }
        head2->next= head;
        return head1;
    }
};
    
