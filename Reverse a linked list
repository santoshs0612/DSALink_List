
Given a linked list of N nodes. The task is to reverse this list.

Example 1:

Input:
LinkedList: 1->2->3->4->5->6
Output: 6 5 4 3 2 1
Explanation: After reversing the list, 
elements are 6->5->4->3->2->1.
Example 2:

Input:
LinkedList: 2->7->8->9->10
Output: 10 9 8 7 2
Explanation: After reversing the list,
elements are 10->9->8->7->2.












struct Node
{
    int data;
    struct Node *next;
}

*/

class Solution
{
    public:
    //Function to reverse a linked list.
    struct Node* reverseList(struct Node *head)
    {
        // code here
        // return head of reversed list
        // Method-1 Iterative Method
        // struct Node* prev=NULL;
        // struct Node* curr=head;
        // struct Node* Next=NULL;
        // while(curr!=NULL)
        // {
        //     Next=curr->next;
        //     curr->next=prev;
        //     prev=curr;
        //     curr=Next;
        // }
        // return prev;
        // Method-2 Recurssive Method 
        
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        
        struct Node* new_head= reverseList(head->next);
        head->next->next=head;
        head->next=NULL;
        return new_head;
    }
    
};
    
