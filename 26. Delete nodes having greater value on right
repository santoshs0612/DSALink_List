Given a singly linked list, remove all the nodes which have a greater value on their right side.

Example 1:

Input:
LinkedList = 12->15->10->11->5->6->2->3
Output: 15 11 6 3
Explanation: Since, 12, 10, 5 and 2 are
the elements which have greater elements
on the following nodes. So, after deleting
them, the linked list would like be 15,
11, 6, 3.
Example 2:

Input:
LinkedList = 10->20->30->40->50->60
Output: 60


/*

The structure of linked list is the following

struct Node
{
    int data;
    Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
};
*/
class Solution
{
    public:
    Node* reverse(Node* head)
    {
        Node* prev= NULL;
        Node* curr=head;
        Node* next_n= NULL;
        
        while(curr!=NULL)
        {
            next_n= curr->next;
            curr->next= prev;
            prev= curr;
            curr=next_n;
        }
        return prev;
    }
    Node *compute(Node *head)
    {
        // your code goes here
        
        head= reverse(head);
        
        Node* prev= head;
        Node* curr=head->next;
        int max_till= head->data;
        while(curr!=NULL)
        {
            
            if(curr->data>= max_till)
            {
                max_till = curr->data;
                prev= curr;
                curr= curr->next;
            }
            else 
            {
                prev->next= curr->next;
                curr=curr->next;
            }
        }
        
        head= reverse(head);
        return head; 
        
        

    }
    
};
   
